# BOJ 2xn 타일링 2
# 넓이가 1인 도형과 2인 도형으로 n의 넓이를 채우는 문제와 같다
# 넓이가 3인 도형을 만드는 경우의 수 1 1 1, 1 2 , 2 1
# 문제를 작게 나눠보면
# -> 넓이가 2인 도형에서 1을 더하는 경우
# -> 넓이가 1인 도형에서 2를 더하는 경우
# 따라서 3을 만드는 경우의 수는 1에서 2 더하기, 2에서 1더하기의 경우를 합친 것과 같다. 도형의 넓이가 2개뿐이기 때문에 다른 경우의 수는 없음
# -> 이번 문제에선 넓이가 2인 정사각형이 2개다. 이 부분을 고려해야한다.
# 1에서 2를 더하는 경우 = 1 + (1+1), 1 + 2_1, 1 + 2_2
# 2에서 1을 더하는 경우 = 2_1 + 1, 2_2 + 1
# 단순히 2_1의 자리를 2_2로 대체하는 경우가 추가되므로 * 2 해주면 된다


import sys

input = sys.stdin.readline
MOD = 10007


def get_input():
    return int(input())


def solution(n):
    dp = [0 for _ in range(1001)]
    dp[1] = 1
    dp[2] = 3

    for i in range(3, n + 1):
        dp[i] = (dp[i - 1] + dp[i - 2] * 2) % MOD

    return dp[n]


if __name__ == "__main__":
    print(solution(get_input()))
